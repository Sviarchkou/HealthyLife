<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="filter.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>